{"version":3,"sources":["components/Profile/Profile.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","img/like.jfif","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","img/landscape.webp","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/arrayWithHoles.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/iterableToArrayLimit.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/nonIterableRest.js","components/Profile/ProfileStatusWithHooks.js","components/Profile/ProfileInfo.js","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","Post","huj","className","c","item","src","ava","alt","message","like","lcount","maxLength","maxLengthCreator","NewPostReduxForm","reduxForm","form","props","onSubmit","handleSubmit","Field","component","Textarea","name","new","placeholder","validate","required","MyPosts","p","myPostsComp","state","anyPosts","map","el","id","theBlock","formContent","newPost","newMsgText","posts","MyPostsContainer","connect","profileBlock","dispatch","text","addPostActionCreator","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_arr","_n","_d","_e","undefined","_s","_i","next","done","push","value","length","err","unsupportedIterableToArray","TypeError","ProfileStatusWithHooks","useState","editMode","setEditMode","status","setStatus","useEffect","onDoubleClick","isMe","type","onBlur","updateStatus","autoFocus","size","onChange","e","target","ProfileInfo","profile","land","fullName","color","aboutMe","photos","large","entries","contacts","lookingForAJob","lookingForAJobDescription","Preloader","Profile","updateUserStatus","userId","myUserId","ProfileContainer","this","match","params","getUserProfile","getUserStatus","React","Component","compose","auth","getUserProfileThunkCreator","getUserStatusThunkCreator","updateUserStatusThunkCreator","withAuthRedirect","withRouter"],"mappings":"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","file":"static/js/3.fe94d5ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"land\":\"Profile_land__2SUOE\",\"status\":\"Profile_status__3r650\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"MyPosts_item__1ay08\",\"theBlock\":\"MyPosts_theBlock__1QC0O\",\"posts\":\"MyPosts_posts__2tgx_\",\"new\":\"MyPosts_new__2tQMS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__1oe1X\",\"like\":\"Post_like__2YyyD\"};","export default __webpack_public_path__ + \"static/media/like.dab55641.jfif\";","// Определение компонеты Post (одно сообщение в профиле пользователя(на стене?))\r\n\r\nimport c from \"./Post.module.css\";\r\nimport ava from \"../../../../img/ava.png\"\r\nimport like from \"../../../../img/like.jfif\"\r\n\r\nconst Post = (huj) => {\r\n    return (\r\n        <div>\r\n            <div className={c.item}><img src={ava} alt=\"avatar\"/>{huj.message}\r\n                <span className={c.like}><img src={like} alt=\"like\"/>{huj.lcount}</span></div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Post;","import c from \"./MyPosts.module.css\";\r\nimport Post from \"./Post/Post\";\r\nimport React from \"react\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {maxLengthCreator, required} from \"../../common/validators\";\r\nimport {Textarea} from \"../../common/FormControls\";\r\n\r\n\r\n// Функциональная компонента ничего не знает о store, работает только с контейнерной компонентой\r\nconst MyPosts = (p) => {\r\n    // Здесь функция map преобразует массив данных в массив компонентов, содержащих этих данных,\r\n    // фактически оборачивает данные в html разметку!\r\n    const myPostsComp = p.state.anyPosts.map(el => <Post key={el.id} message={el.message} lcount={el.lcount}/>);\r\n\r\n    // Использование проброшенной функции для добавления сообщения в массив сообщений на стороне бизнес логики.\r\n    // Получения текста сообщения происходит на стороне BLL.\r\n    let addNewPost = (formContent) => {\r\n        p.newPost(formContent.newMsgText);\r\n    };\r\n\r\n    return (\r\n        <div className={c.theBlock}>\r\n\r\n            <h3 className={c.item}>My posts</h3>\r\n            <NewPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={c.posts}>\r\n                {myPostsComp}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n// Через замыкание создаём ф-цию с максимальной требуемой длиной\r\nconst maxLength = maxLengthCreator(30);\r\n\r\nconst newPostForm = (props) => {\r\n    return <form onSubmit={props.handleSubmit}>\r\n        <div><Field component={Textarea} name={\"newMsgText\"} className={c.new}\r\n                    placeholder={\"Type new post here\"} validate={[required, maxLength]}/>\r\n        </div>\r\n        <div>\r\n            <button>Add post</button>\r\n        </div>\r\n    </form>\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: \"newPostForm\"})(newPostForm);\r\n\r\nexport default MyPosts;","import {addPostActionCreator} from \"../../../redux/profileBlockReducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\n// ф-ция возвращает объект данных\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        state: state.profileBlock\r\n    }\r\n}\r\n\r\n// ф-ция возвращает объект коллбеков\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        newPost: (text) => {dispatch(addPostActionCreator(text));}\r\n    }\r\n}\r\n\r\n// connect созадёт контейнерную компоненту MyPostsContainer. Она замыкает на себе\r\n// общение со store и передаёт данные и колбеки в презентационную компоненту MyPosts.\r\n// store передаётся по технологии context через компоненту Provider в файле index.js\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","export default __webpack_public_path__ + \"static/media/landscape.88de7fd0.webp\";","import arrayWithHoles from \"@babel/runtime/helpers/esm/arrayWithHoles\";\nimport iterableToArrayLimit from \"@babel/runtime/helpers/esm/iterableToArrayLimit\";\nimport unsupportedIterableToArray from \"@babel/runtime/helpers/esm/unsupportedIterableToArray\";\nimport nonIterableRest from \"@babel/runtime/helpers/esm/nonIterableRest\";\nexport default function _slicedToArray(arr, i) {\n  return arrayWithHoles(arr) || iterableToArrayLimit(arr, i) || unsupportedIterableToArray(arr, i) || nonIterableRest();\n}","export default function _arrayWithHoles(arr) {\n  if (Array.isArray(arr)) return arr;\n}","export default function _iterableToArrayLimit(arr, i) {\n  if (typeof Symbol === \"undefined\" || !(Symbol.iterator in Object(arr))) return;\n  var _arr = [];\n  var _n = true;\n  var _d = false;\n  var _e = undefined;\n\n  try {\n    for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n      _arr.push(_s.value);\n\n      if (i && _arr.length === i) break;\n    }\n  } catch (err) {\n    _d = true;\n    _e = err;\n  } finally {\n    try {\n      if (!_n && _i[\"return\"] != null) _i[\"return\"]();\n    } finally {\n      if (_d) throw _e;\n    }\n  }\n\n  return _arr;\n}","export default function _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}","import {useEffect, useState} from \"react\";\r\nimport c from \"./Profile.module.css\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n// хук useEffect вызывается после отрисовки и при изменении зависимостей (2-ой аргумент)\r\n    useEffect(() => {\r\n        setStatus(props.status);\r\n    }, [props.status]);\r\n\r\n    const setEditModeOn = () => {\r\n        if (!props.isMe) return; // не меняем свой статус на основании чужого!\r\n        setEditMode(true);\r\n    }\r\n    const setEditModeOff = () => {\r\n        setEditMode(false);\r\n        if (props.status !== status) {\r\n            props.updateStatus(status);\r\n        }\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return <div>\r\n        <div className={c.status}>Статус:</div>\r\n        {!editMode &&\r\n        <div onDoubleClick={setEditModeOn}>{props.status || \"нет\"}</div>}\r\n        {editMode &&\r\n        <div><input type=\"text\" onBlur={setEditModeOff}\r\n                    autoFocus={true} size=\"50\"\r\n                    onChange={onStatusChange}\r\n                    value={status}/></div>}\r\n    </div>;\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import land from \"../../img/landscape.webp\";\r\nimport c from \"./Profile.module.css\";\r\nimport ava from \"../../img/ava.png\"\r\nimport Preloader from \"../common/Preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileInfo = ({profile, status, isMe, updateStatus}) => {\r\n    if (!profile) {\r\n        return <Preloader/>\r\n    }\r\n    return <>\r\n        <img src={land} alt=\"Profile wallpaper\" className={c.land}/>\r\n        <div><h2>{profile.fullName}</h2></div>\r\n        <div><font color=\"red\" size=\"+2\">{profile.aboutMe}</font></div>\r\n        <div><img src={profile.photos.large || ava} alt=\"Contact picture\"/></div>\r\n        <div><h3>Контакты:</h3></div>\r\n        <div>{ Object.entries(profile.contacts).map(c => {\r\n            if (c[1]) return <div> <b>{c[0]}:</b> {c[1]}</div>\r\n            else return \"\";\r\n        }\r\n        )}</div>\r\n        <div><br/><b>Поиск работы:</b> {profile.lookingForAJob?<i>\"Да\"</i>:\"Нет\"}</div>\r\n        {profile.lookingForAJob?<div><b>Описание:</b> {profile.lookingForAJobDescription}</div>:\"\"}\r\n        <ProfileStatusWithHooks status={status} updateStatus={updateStatus} isMe={isMe}/>\r\n    </>\r\n}\r\n\r\nexport default ProfileInfo","import MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport ProfileInfo from \"./ProfileInfo\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status}\r\n                         updateStatus={props.updateUserStatus}\r\n                         isMe={props.profile?.userId === props.myUserId}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Profile;","import React from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfileThunkCreator, getUserStatusThunkCreator, updateUserStatusThunkCreator} from \"../../redux/profileBlockReducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId || this.props.myUserId || 2;\r\n\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    }\r\n\r\n    render() {\r\n        return <Profile {...this.props}/>\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    profile: state.profileBlock.profile,\r\n    status: state.profileBlock.status,\r\n    myUserId: state.auth.userId\r\n});\r\nconst mapDispatchToProps = (dispatch) => ({\r\n    getUserProfile: (userId) => {dispatch(getUserProfileThunkCreator(userId))},\r\n    getUserStatus: (userId) => {dispatch(getUserStatusThunkCreator(userId))},\r\n    updateUserStatus: (status) => {dispatch(updateUserStatusThunkCreator(status))}\r\n});\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, mapDispatchToProps), //#3\r\n    withAuthRedirect, //#2 - HOC\r\n    withRouter //#1\r\n)(ProfileContainer);"],"sourceRoot":""}